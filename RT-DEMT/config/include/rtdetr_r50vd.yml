task: detection

model: RTDETR
criterion: SetCriterion
postprocessor: RTDETRPostProcessor


RTDETR: 
#  backbone: PResNet
  backbone: Backbone_VSSM
  encoder: HybridEncoder
  decoder: RTDETRTransformer
  multi_scale: [512]
#  multi_scale: [480, 512, 544, 576, 608, 640, 640, 640, 672, 704, 736, 768, 800]

#PResNet:
#  depth: 50
#  variant: d
#  freeze_at: 0
#  return_idx: [1, 2, 3]
#  num_stages: 4
#  freeze_norm: True
#  pretrained: False
Backbone_VSSM:
  pretrained: /home/kemove/PycharmProjects/RT-DETR-Mamba/rtdetr_pytorch/tools/vssm1_tiny_0230s_ckpt_epoch_264.pth


HybridEncoder:
  in_channels: [192, 384, 768]
  feat_strides: [8, 16, 32]

  # intra
  hidden_dim: 256
  use_encoder_idx: [2]
  num_encoder_layers: 1
  nhead: 8
  dim_feedforward: 1024
  dropout: 0.
  enc_act: 'gelu'
  pe_temperature: 10000
  
  # cross
  expansion: 1.0
  depth_mult: 1
  act: 'silu'

  # eval
  eval_spatial_size: [512, 512]


RTDETRTransformer:
  feat_channels: [256, 256, 256]
  feat_strides: [8, 16, 32]
  hidden_dim: 256
  num_levels: 3

  num_queries: 300

  num_decoder_layers: 6
  num_denoising: 100
  
  eval_idx: -1
  eval_spatial_size: [512, 512]


use_focal_loss: True

RTDETRPostProcessor:
  num_top_queries: 300


SetCriterion:
  # num_classes: 80
  weight_dict: {loss_vfl: 1, loss_bbox: 4, loss_giou: 2, loss_kpt: 6}
  losses: ['vfl', 'boxes', 'kpt']
  alpha: 0.75
  gamma: 2.0

  matcher:
    type: HungarianMatcher
    weight_dict: {cost_class: 2, cost_bbox: 4, cost_giou: 2, cost_kpt: 6}
    # use_focal_loss: True
    alpha: 0.25
    gamma: 2.0


